For next time:
PRE needs claimFor to allow people to trigger a claim on your behalf. 
mapping (address => uint8 ) claimDelegates;// % between 0 and 100. 0==disabled. 1==0, 101 == 100

Front end:
In client/src/blockchain/observables/WeiDai, add an observable for each method

read context https://reactjs.org/docs/context.html
look at use reducer with context to allow deep dispatching without passing props all the way down (this is going to make my code so much neater)


1. in wallet replace each prop with a state hook
2. in blockchainAPI use rxjs to watch for account changes (https://www.learnrxjs.io/concepts/rxjs-primer.html)
 -> in wallet, useEffects to subscribe/unsubscribe to the accountstream
 -> web3.eth.subscribe(“newBlockHeaders”)
		-> in this subscription, emit to observables new accounts, and view updates
3. if 2 is successful then subscribe to each new block and call all the view methods
	-> if any one of them changes, have an refresh method which returns an incremented int and can be fired in every render




