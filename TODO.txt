Interactions with metmask post 2020: -- DONE
This article explains how to create an updatable context (no need to use redux) https://dev.to/oieduardorabelo/react-hooks-how-to-create-and-update-contextprovider-1f68

1. implement front end transfer to new reserve
2. Write a ReserveContract that just wraps chai and stores it.
3. ^do this after behodler. With fast enough growth, it might be worthwhile to unplug from DSR altogether.

1. On page load, top level calls ethereumAPI.detectMetaMaskEnabled() and gets 1 of 2 values["disabled","disconnected"]
2. set the context value. 
3. Subscribe to eth_accounts with a closure to setcontext as per https://gist.github.com/rekmarks/d318677c8fc89e5f7a2f526e00a0768a
4. Button in header for connect/getmetamask. Always says connect wallet with popup of install/connect
4. Use context to set visibility of infopanel and optionally hide some actions (pre,redeem etc)


Useful:
transaction of pot reserve: 0x9366133eff7ea1bb80d3e6d5c684814f4926db095da82d6c7baac55931827b3f
address 0x64FB919a501E8c9Eecd8c541273Efe04CBCE79DA





Behodler:
FOR NEXT TIME: exchange rate calculations don't match actual scarcity produced

Interfaces --DONE
1. populate contracts interface with behodler contracts --DONE
2. web3 instantiate behodler -- DONE
3. Get Behodler Admin contract list populated using context of IContracts --DONE
4. On behodler context, populate owner text box with existing owner.--DONE
    4.1 Allow user to change text from default owner text
5. Execute seed function on Behodler section. -- DONE
6. Complete the rest --DONE

Design TODO:
1. Design a section for redeeming pyrotokens.

Contract onboarding:
A text file of approved contracts is shipped with UI. This causes the dropdown to be populated. A folder with images with names equal to the index of the text file is shipped. The image appears in 
drop down. (pallette?)
- baseTokens.js is complete.

A similar file for pyroTokens with similar folder

Behodler User Screen:
1. Create uniswap looking textbox. Include a twirly that can be turned on with a state. --DONE, no need for twirly
        On enable, should see twirly followed by enable vanishing -- DONE
(Uniswap slippage is what happens after. Limit additional slippage is from front runners etc.)
2. Wording: "You are selling 10 oxt which will cause the behodler token bonding curve to produce 10 scarcity (scx) <remember fees>. This will then be used to purchase 50 Loom."
    You can set bounds on how much scarcity is produced or required to limit your losses from front running or late block inclusion:
    Min scx required to produce 10 oxt  <text box>
    Max scx required to purchase 50 Loom <text box>
3. Implement Swap button -- DONE
4. Add a swap token toggle to switch out and in -- DONE
5. Don't require enabling for scarcity --DONE
6. Display a total fee section with a breakdown below. Each level should have a tooltip explainer:
    6.1 Scarcity, explaining how this adds to the reserve
    6.2 Pyrotoken, explaining how this is a reward for trading
    6.3 Fee, explaining how this is an optional fee to support the system.
    6.4 Different for WeiDai and Dai
7. show total token in reserve
8. Make an exception for weth --DONE
9. Deal with insufficient balance problem
10. Add swap to minified app bar

Pyrotoken page
1. Firstly change routing so that swap is /behodler/swap, pyroTokens are /behodler/pyroTokens and chronos has its owner
2. On each page have a slidy selector thing at the top like uniswap with swap/pyrotokens/chronos (https://material-ui.com/components/tabs/)
3. On Pyrotoken page, have the extended view boxes like swap but instead of input to output, have pyrotoken -> base token
4. Instead of swap button have redeem
5. Below the base token textbox have the redeem rate and the total redeem rate growth

SECURITY: see reentrancy attack: https://www.cryptonewtech.com/2020/04/26/storage-markets-and-the-rise-of-the-interplanetary-file-system-ipfs/

Later:
Add beta warning
Implement Chronos powered price history

TOKENS to consider:
WBTC
tBTC
Storj
Mana
cDai
c20
Civic
DGX
FOAM
GEN (DaoStack)
KNC (Kyber Network Crystal)
MKR